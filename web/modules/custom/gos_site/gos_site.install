<?php

/**
 * @file
 * Install, update and uninstall functions for the gos_site module.
 */

use Drupal\Core\Database\Database;
use Drupal\image\Entity\ImageStyle;

/**
 * Add State column to ReleaseItem field.
 */
function gos_site_update_8100(): void {
  $schema = Database::getConnection()->schema();

  $schema->addField('node__field_releases', 'field_releases_state', [
    'type' => 'text',
    'size' => 'tiny',
    'not null' => FALSE,
  ]);

  $schema->addField('node_revision__field_releases', 'field_releases_state', [
    'type' => 'text',
    'size' => 'tiny',
    'not null' => FALSE,
  ]);
}

/**
 * Add basic image styles.
 */
function gos_site_update_8200(): void {
  $image_styles = [
    '3x2_330x220' => [
      'effect' => 'focal_point_scale_and_crop',
      'width' => 330,
      'height' => 220,
    ],
    '3x2_660x440' => [
      'effect' => 'focal_point_scale_and_crop',
      'width' => 660,
      'height' => 440,
    ],
    'downscale_330x660' => [
      'effect' => 'image_scale',
      'width' => 330,
      'height' => 660,
    ],
    'downscale_675x500' => [
      'effect' => 'image_scale',
      'width' => 675,
      'height' => 500,
    ],
    'downscale_1350x1000' => [
      'effect' => 'image_scale',
      'width' => 1350,
      'height' => 1000,
    ],
    'downscale_2560x1600' => [
      'effect' => 'image_scale',
      'width' => 2560,
      'height' => 1600,
    ],
    'placeholder_30x30' => [
      'effect' => 'focal_point_scale_and_crop',
      'width' => 30,
      'height' => 30,
    ],
  ];

  foreach ($image_styles as $id => $definition) {
    $machine_name = $id;
    $label = $id;

    if (ImageStyle::load($machine_name)) {
      Drupal::logger('gos_site')
        ->notice(
          'The image style @label already exists.',
          ['@label' => $label]
        );

      continue;
    }

    // Create image style.
    /** @var \Drupal\image\ImageStyleInterface $style */
    $style = ImageStyle::create(['name' => $machine_name, 'label' => $label]);

    // Init effect settings.
    $data = [];

    // Add optional width - for ratio effects.
    $data['width'] = $definition['width'];

    // Add optional height - for ratio effects.
    $data['height'] = $definition['height'];

    // Create the effect.
    $configuration = [
      'uuid' => NULL,
      'id' => $definition['effect'],
      'data' => $data,
    ];

    /** @var \Drupal\image\ConfigurableImageEffectInterface $effect */
    $effect = Drupal::service('plugin.manager.image.effect')->createInstance($configuration['id'], $configuration);

    // Add it to the image style and save.
    $style->addImageEffect($effect->getConfiguration());
    $style->save();

    // Lets tell the site admin what we are doing.
    Drupal::logger('gos_site')
      ->notice(
        'The new image style @label has been created.',
        ['@label' => $label]
      );
  }
}
